#version 460
#extension GL_EXT_ray_tracing : require

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
// layout(binding = 1, set = 0, rgba32f) uniform image2D image;
// Change format and image setup code if needed
layout(binding = 1, set = 0, rgba8) uniform image2D image;

layout(location = 0) rayPayloadEXT vec4 payload;

void main()
{

    payload = vec4(0.0, 0.0, 0.0, 1.0);

    // Get pixel coordinates
    uvec2 pixel = gl_LaunchIDEXT.xy;
    uvec2 resolution = gl_LaunchSizeEXT.xy;

    // Normalize pixel coords to [0, 1]
    vec2 uv = (vec2(pixel) + 0.5) / vec2(resolution);

    // Map to orthographic plane in world space
    float x = (uv.x - 0.5) * 8;
    float y = (uv.y - 0.5) * 6;

    vec3 camera_pos = vec3(0.0, 0.0, -2.0);
    // vec3 ray_origin = camera_pos; 
    // vec3 ray_origin = vec3(camera_pos.x + gl_LaunchIDEXT.x, camera_pos.y + gl_LaunchIDEXT.y, camera_pos.z);
    vec3 ray_origin = camera_pos + vec3(x, y, 0.0);
    vec3 ray_direction = vec3(0, 0, 1.0);

    traceRayEXT(
        topLevelAS, 
        gl_RayFlagsOpaqueEXT, 
        0xFF, 
        0, // sbt offset
        1, // sbt stride
        0, // miss index
        ray_origin, // ray origin
        0.0, // ray min
        ray_direction, // ray direction, 
        1000.0, //ray max
        0 // ray payload
    );

    // imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(0.5, 0.5, 0.5, 1.0));
    imageStore(image, ivec2(gl_LaunchIDEXT.xy), payload);

}
